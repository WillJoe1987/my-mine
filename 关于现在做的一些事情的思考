架构一词，来源渊远。从建筑学，到人力资源，到经济学，到国家政治。
在IT上，也借用了这个词。我记得的最好的一个定义是：架构，就是把不同的东西分开来摆放。IT架构，发展至今，在各种借来的思想指导下，乱七八糟的框架应运而生。于是时间久了，被称作架构师的人渐渐变成了配置管理员，懂得各种框架的搭建和配置就可以了。也就对架构师的定义渐渐偏了。架构师的能力也不再是怎样去区分不同的东西，怎样区分摆放了。反正，再怎么会区分不同的东西，再怎么会摆放，大概都不如懂个XXXX框架的配置来得让人相信。哼。
最近看《失控》，里边提到颇多分布式架构，颇有些意思。简单个体的集合在相互作用下，形成复杂系统，体现出完全无法用还原理念解析的特性。比如，一只蜜蜂的记忆是6天，而蜂群的记忆是三个月；人的记忆是完全无法在精细到研究清楚每一个细胞，就能搞清楚记忆是如何形成。对于复杂系统可以研究、刺激、引导，但觉得是不可控制和预测的。
说回来，现在我们在做任何一个IT系统的时候，事情不仅仅是IT的体系架构能够决定的。产品的架构，是由顶层的业务架构，以及人员组织架构和IT技术架构组成。它们相互作用，相互对抗，相互合作，也共同进化。形成整体的产品的进化。这是一个复杂系统，不是任何个人可以预测和控制的，我们能够做得，就是尽量依照我们的观察去，从尽量好的方向上去引导。当然，虽然很多时候，结果如何已不是可以预知的。
阿里巴巴从某种程度上，改造了中国金融的生态。其出发点，仅仅是对于支付的简化操作。多年以后，谁又能预知到，这个简化能够做出如此大的影响呢，这是中国金融生态与支付宝的共同进化。谁又知道，再如此发展下去，未来又会进化成如何。
复杂系统的启动，是一个有趣的组装。但是能够发展成我们想要的状态，就很难说了。这，也是一个很关键的步骤。很多生态系统的培育实验，都以失败告终，经过研究发现，其实是启动的时候，元素组合的原因。很多生态学家希望能够还原草原，结果总是还原到了其他生态。
那我们现在做得事情来举个例子。顶层业务架构师在行业内部浸淫了数十年，顶层业务架构的设计丰富、深沉、复杂；人员组织架构是外包IT服务架构，之前在银行业的业务架构下进行支持服务，相对来说技术架构层级简单，但业务含义深远；而技术架构则采用了互联网的技术架构，互联网的技术架构往往在业务规则的支持上较为简单，但在业务量的支持，也就是并发性能上非常高效。三者的实质特点颇为明显，但又似乎不很合拍。
复杂的业务架构，靠性能的简单技术架构支持，又由外包性质的团队来做运营性质的平台维护。看起来，三者的对抗与负反馈，要大于合作；只怕是进化起来要颇费周折了。
呃，慢慢评论吧。。。
大概，这里面要梳理，就得从业务，到开发，到技术调整。人是这里最智能的环节，是最具决定性的因子。所以，简化开发、简化业务，让另外的两个因子，首先与人员组织架构的对抗性降低，再逐步丰富业务与技术层级的设计。在较为温和的对抗下，团队能够更容易地与业务和技术共同进化，形成一个良性循环。
又他妈说远了，不过，我倒是觉得，好像架构师得能玩得了这些。呃，或者是CEO？呵呵。




性能？REDIS一宕，整个业务中断？从性能优化的能力，变成了业务风险的瓶颈。
TOMCAT7 在开启NIO的情况下，能够优化到10000+的TPS；在报文加大到10k的情况下，处理能力也在6000+，瓶颈似乎落到了带宽上。呃，这是但节点的TOMCAT。好像很伟大。哼。最终的瓶颈都在磁盘读写上了。
