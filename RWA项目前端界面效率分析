RWA项目前端界面效率分析
2016-1-29
环境
1、	办公网络采用citrix虚拟客户端进行应用访问；
2、	虚拟客户端采用浏览器IE8 （内置js执行引擎：Trident/4.0）；由于虚拟客户端安全设置，浏览器详细版本号未知；
3、	citrix采用的安全加密策略未知；
4、	citrix为引用访问窗口分配的资源情况未知。
现象
办公网络通过虚拟客户端正常访问应用，得到如下现象：
1、	应用登陆后，首页加载较慢；
2、	瓷贴渲染及数据加载正常；
3、	拖动瓷贴放开后，瓷贴移动出现卡顿；
4、	点击菜单或者瓷贴打开任务窗口，在窗口最大化过程的动画过程中，出现较长时间的卡顿；
5、	菜单窗口完全打开后，内部数据拖动、面板弹出、数据查询等正常；
6、	任务窗口顶部的菜单切换等有短时间卡顿；
7、	如果采用虚拟端中配置的firefox浏览器，则所有效果都很流畅。

基于以上情况，我们申请生产网络操作机进行测试。生产网络直接通过浏览器访问应用，不经过办公虚拟客户端。
对比得到以下结论：
1、	生产操作机动画效果也有些不流畅，但相对于办公网络虚拟客户端的卡顿要小；
2、	生产操作机上IE11、firefox、chrome效果非常流畅；
3、	在生产操作机上使用调试工具，对较为卡顿的本分进行监控分析：
a)	窗口最大、最小化、置顶层操作耗时最长，最高达到3s以上，分析js调用，发现原因在与Ext底层的API在定位、尺寸计算等运行效率较低；
b)	顶层菜单的切换中，耗时较多的菜单隐藏与显示操作，也许底层定位有关。
原因分析
1、	IE8下，通过虚拟客户端和不通虚拟客户端访问应用，执行效果有一定差距，需要了解citrix虚拟客户端为应用界面的资源分配以及加密策略等配置；
2、	同样的访问环境下，IE8与IE11、firefox、chrome等浏览器的执行效率差异明显。IE8的Trident4.0引擎的js执行效率过低，支撑js框架比较勉强；而IE11（Trident7.0）、firefox（SpiderMonkey）、chrome（v8）的js引擎执行效率则要高出很多，所以浏览器里的应用表现非常流畅。
方案建议
1、	citrix对虚拟客户端的资源分配可否增加；
2、	建议升级浏览器版本。IE8的js执行效率业界已经诟病多年，微软在IE9中主要的升级优化工作就是对js执行效率的升级。如果行内规范不建议使用其他浏览器的话，建议讲IE版本升级到IE9或以上版本；
3、	针对低效浏览器进行局部性能优化。
a)	取消掉任务窗口模式，取消掉最大化、最小化等效果，取消最大化、最小化按钮；
b)	首页取消瓷贴拖动后的瓷贴移动效果；
c)	分析Ext菜单对象底层运行情况，优化或重写该对象；
这些优化可在IE8下缓解一定的卡顿状况，但治标不治本，体验效果可能会有所降低。
