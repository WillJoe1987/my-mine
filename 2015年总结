2015年总结

我向来是不很喜欢做笔记的。笔记只能记录事情，记录不了真实的感受和智慧。记录多了，就把很多事情快餐化了。
所以，往年的总结总是缺失。今年金刚说不写不给批考勤，天哪，那就回忆一下吧。

2015年所出不多，想来思想上是有颇多的懈怠的。
说事情。

全年的事情主要是围绕着WLJ前端框架的项目支持开展的。现场、远程支持的项目很多，就不列举了。主要包含了几种工作：
1、	远端开发的支持，这些事情主要是对开发细节进行解释、协助；大部分都是电话里沟通一下，提示一下即可。这些事情大都是开发上的，我还是希望能够坚持“代码文档化，文档代码化”的思路。不用那些大段大段的开发说明，而是希望能够开发人员在拿到代码的时候，就像在看文档；而他们写出来的代码，也就像是在写文档。（当然，目标还很远。）
2、	针对项目实施过程的框架级别的版本提升。部分项目、尤其是非CRM条线项的一些新的要求。这些需求往往是对产品框架提升有一定实际意义的。截止到目前为止，增加了将近十个开发接口；二十多个首页及内部配置项；增加了插件系统；增加补丁文件系统；增加单独静态页面系统；增加前端界面代码设计及预览系统；增强了表格的操作特性，如锁定列、多层表头、纵横对齐等等。

一些心得：
目前，这套前端框架形成了一套面向句柄式的前端开发模式。开发接口与底层实现逐步隔离，底层的支持框架可以逐步重写或者替换，而不影响到现有代码的执行；这个方向上，可以实现多种终端一套代码。
最近正在准备一些自动测试的东西。因为功能本身都是框架自身在运行，业务代码只是简单的配置项和逻辑片段。所以，这种框架的自动化测试其实更多地应该集中在框架自身的运行上。
遇到几个提出前端效率问题的项目。这些东西一方面需要在框架自身的逻辑优化上进行，一方面的也需要有一定的前瞻性。微软在IE9以上的js引擎在内存回收和执行效率上有了很大提升；而移动端的内置webview大都采用谷歌的v8，其实效率的瓶颈已经很低。
框架创建之初，就与王印设计约定了样式皮肤资源的接口框架。所以，这两年，王印在做出新的皮肤样式的时候，就很标准方便。
目前也有两个项目，遇到了要输出页面的问题。因为我们目前的框架内，子页面与父页面的关联关系颇为紧密，导致目前我们的对外输出颇为困难。未来可能要增加这方面的适配。
在此基础上，前后端框架分离管理，未来分离部署，也总会成为必要的。各个层面上分割越来越小，也就越来越大型。这其实，就是所谓的为服务了。

除此之外，还有一些其他方面的支持，如苏州、中行、南京银行等。这些工作里，主要包括了JVM优化与问题排查，中间件部署，以及一些前端设计等。
这些问题，我也不怎么特别擅长。但是，在遇到这些问题之前，我私下底花过时间自己鼓捣过。很多事情在当时看起来是很没有用的。
但是，你永远不知道你学到的东西在什么时候会派上用场。所以，说一些工作之外。

之外，也玩一些东西。
最近大家颇迷信hadoop。浅尝一下，觉得远没想象中的靠谱。14年已经有颇多架构师诟病。大数据的方向在我们了解之初，已经变样。我去，跟股市一样。
玩了下python。这语言，性能一般，但是黏贴其他语言的高速库颇容易。Python与javascript比，聪明在诞生之初就自己定义了生存环境，但也败在这里。
一段时间尝试着去做欧拉计划的题。一开始信心满满，后来被打击崩溃了。最厉害的程序员，是使用paper和pencil的。https://projecteuler.net/
回头，再看看V8和node吧。这种高速并发引擎，会成为未来对压力的主要解决方案。
